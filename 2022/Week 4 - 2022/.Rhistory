black$size <- factor(black$size, levels=c("short", "tall", "grande", "venti"))
black$product_name <- swr(black$product_name)
black$product_name <- str_to_title(black$product_name)
black %>%
filter(size != "trenta") %>%
ggplot() +
aes(x = reorder(product_name, caffeine_mg), y = caffeine_mg) +
geom_col(fill = "#654321") +
facet_grid(rows = vars(size)) +
theme_strip_mod +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Caffeine (mg) in Starbucks Black Coffee",
caption = "Source: Behance - Starbucks infographics | github: julia-tache | Jan 4th, 2022")
ggsave("black.png")
starbs_special
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(tidytuesdayR)
tuesdata <- tidytuesdayR::tt_load('2021-12-21')
starbucks <- tuesdata$starbucks
head(starbucks)
theme_strip <- theme_minimal() +
theme(axis.text.x = element_blank(),
axis.line.y = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, hjust = 0.5),
legend.position="bottom",
legend.title = element_blank())
starbs_special <- starbucks %>%
filter(size == "grande") %>%
filter(milk == "5") %>%
filter(whip == 1) %>%
select(-sodium_mg, -saturated_fat_g, -trans_fat_g, -fiber_g, -sugar_g) %>%
rename("Calories" = "calories") %>%
rename("Total Fat (g)" = "total_fat_g") %>%
rename("Cholesterol (mg)" = "cholesterol_mg") %>%
rename("Total Carbs (g)" = "total_carbs_g") %>%
rename("Caffeine (mg)" = "caffeine_mg")
starbs_special <- starbs_special[-c(2), ] # gets rid of repeat
swr = function(string, nwrap=20) {
paste(strwrap(string, width=nwrap), collapse="\n")
}
swr = Vectorize(swr)
# Create line breaks in Year
starbs_special$product_name <- swr(starbs_special$product_name)
# code from https://stackoverflow.com/questions/37174316/how-to-fit-long-text-into-ggplot2-facet-titles?noredirect=1&lq=1
library(png)
img <- readPNG("mug.png")
p <- starbs_special %>%
pivot_longer(c(Calories, `Total Fat (g)`,
`Cholesterol (mg)`, `Total Carbs (g)`, `Caffeine (mg)`),
names_to = "type", values_to = "value") %>%
ggplot() +
aes(x = size, y = value, fill = type) +
geom_col(width = 0.55) +
annotation_raster(img, ymin = -250, ymax= 825, xmin = 0.7, xmax = 1.55) +
facet_wrap(~product_name) +
scale_fill_brewer(palette = "BrBG") +
theme_strip +
theme(strip.text.x = element_text(
size = 7, face = "bold.italic",
margin = margin(b = 0, t = 0))) +
labs(title = "Nutrition Facts of Speciality Starbucks Drinks",
subtitle = "Grande, Whole Milk, with Whip",
caption = "Source: Behance - Starbucks infographics | github: julia-tache | Jan 4th, 2022")
p
ggsave("speciality.png")
theme_strip_mod <- theme_minimal() +
theme(axis.line.y = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
legend.position="bottom",
legend.title = element_blank())
brewed <- starbucks[grep("brewed coffee", starbucks$product_name), ]
Brewed <- starbucks[grep("Brewed Coffee", starbucks$product_name), ]
black <- rbind(brewed, Brewed)
black$size <- factor(black$size, levels=c("short", "tall", "grande", "venti"))
black$product_name <- swr(black$product_name)
black$product_name <- str_to_title(black$product_name)
black %>%
filter(size != "trenta") %>%
ggplot() +
aes(x = reorder(product_name, caffeine_mg), y = caffeine_mg) +
geom_col(fill = "#654321") +
facet_grid(rows = vars(size)) +
theme_strip_mod +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Caffeine (mg) in Starbucks Black Coffee",
caption = "Source: Behance - Starbucks infographics | github: julia-tache | Jan 4th, 2022")
ggsave("black.png")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(htmlwidgets)
library(webshot)
webshot::install_phantomjs()
library(wordcloud2)
wc1 <- wordcloud2(data = dark_choc_words_df, size = 1, color= "random-dark")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(tidytuesdayR)
tuesdata <- tidytuesdayR::tt_load('2022-01-18')
chocolate <- tuesdata$chocolate
summary(chocolate)
head(chocolate)
library(countrycode)
chocolate$cocoa_percent <- as.numeric(str_extract(chocolate$cocoa_percent, "\\d+"))/100
dark_chocolate <- chocolate %>%
filter(cocoa_percent <= 0.8) %>%
filter(country_of_bean_origin != "Blend") %>%
group_by(review_date, country_of_bean_origin) %>%
summarize(country_ratings = mean(rating))
extra_dark_chocolate <- chocolate %>%
filter(cocoa_percent > 0.8) %>%
filter(country_of_bean_origin != "Blend") %>%
group_by(review_date, country_of_bean_origin) %>%
summarize(country_ratings = mean(rating))
dark_chocolate$continent <- countrycode(sourcevar = dark_chocolate$country_of_bean_origin,
origin = "country.name",
destination = "continent")
extra_dark_chocolate$continent <- countrycode(sourcevar = extra_dark_chocolate$country_of_bean_origin,
origin = "country.name",
destination = "continent")
dark_chocolate <- na.omit(dark_chocolate)
extra_dark_chocolate <- na.omit(extra_dark_chocolate)
extra_dark_chocolate <- extra_dark_chocolate %>%
filter(continent != "Asia")
head(dark_chocolate)
head(extra_dark_chocolate)
library(tokenizers)
dark_choc <- chocolate %>%
filter(cocoa_percent <= 0.8)
dark_choc_words <- strsplit(toString(dark_choc$most_memorable_characteristics),",")
dark_choc_words_freq <- table(unlist(dark_choc_words))
dark_choc_words_df <- as.data.frame(cbind(names(dark_choc_words_freq), as.numeric(dark_choc_words_freq)))
dark_choc_words_df$V2 <- as.numeric(dark_choc_words_df$V2)
xtra_dark_choc <- chocolate %>%
filter(cocoa_percent > 0.8)
xtra_dark_choc_words <- strsplit(toString(xtra_dark_choc$most_memorable_characteristics),",")
xtra_dark_choc_words_freq <- table(unlist(xtra_dark_choc_words))
xtra_dark_choc_words_df <- as.data.frame(cbind(names(xtra_dark_choc_words_freq), as.numeric(xtra_dark_choc_words_freq)))
xtra_dark_choc_words_df$V2 <- as.numeric(xtra_dark_choc_words_df$V2)
library(wesanderson)
library(hrbrthemes)
pal <- wes_palette("GrandBudapest1", 100, type = "continuous")
ggplot(dark_chocolate, aes(x = country_ratings, y = continent, fill = ..x..)) +
geom_density_ridges_gradient(scale = 1, rel_min_height = 0.01) +
scale_fill_gradientn(colours = pal, guide = guide_colourbar(), name = "Rating Scale") +
labs(title = "Dark Chocolate Review Ratings by Continent (2006-2021)") +
theme_ridges() +
theme(plot.title = element_text(face = "italic", hjust = 0.5),
legend.position = "bottom",
legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
guides(fill = guide_colourbar(label.position = "bottom", barwidth = 25, barheight = 0.5))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(tidytuesdayR)
tuesdata <- tidytuesdayR::tt_load('2022-01-18')
chocolate <- tuesdata$chocolate
summary(chocolate)
head(chocolate)
library(countrycode)
chocolate$cocoa_percent <- as.numeric(str_extract(chocolate$cocoa_percent, "\\d+"))/100
dark_chocolate <- chocolate %>%
filter(cocoa_percent <= 0.8) %>%
filter(country_of_bean_origin != "Blend") %>%
group_by(review_date, country_of_bean_origin) %>%
summarize(country_ratings = mean(rating))
extra_dark_chocolate <- chocolate %>%
filter(cocoa_percent > 0.8) %>%
filter(country_of_bean_origin != "Blend") %>%
group_by(review_date, country_of_bean_origin) %>%
summarize(country_ratings = mean(rating))
dark_chocolate$continent <- countrycode(sourcevar = dark_chocolate$country_of_bean_origin,
origin = "country.name",
destination = "continent")
extra_dark_chocolate$continent <- countrycode(sourcevar = extra_dark_chocolate$country_of_bean_origin,
origin = "country.name",
destination = "continent")
dark_chocolate <- na.omit(dark_chocolate)
extra_dark_chocolate <- na.omit(extra_dark_chocolate)
extra_dark_chocolate <- extra_dark_chocolate %>%
filter(continent != "Asia")
head(dark_chocolate)
head(extra_dark_chocolate)
library(tokenizers)
dark_choc <- chocolate %>%
filter(cocoa_percent <= 0.8)
dark_choc_words <- strsplit(toString(dark_choc$most_memorable_characteristics),",")
dark_choc_words_freq <- table(unlist(dark_choc_words))
dark_choc_words_df <- as.data.frame(cbind(names(dark_choc_words_freq), as.numeric(dark_choc_words_freq)))
dark_choc_words_df$V2 <- as.numeric(dark_choc_words_df$V2)
xtra_dark_choc <- chocolate %>%
filter(cocoa_percent > 0.8)
xtra_dark_choc_words <- strsplit(toString(xtra_dark_choc$most_memorable_characteristics),",")
xtra_dark_choc_words_freq <- table(unlist(xtra_dark_choc_words))
xtra_dark_choc_words_df <- as.data.frame(cbind(names(xtra_dark_choc_words_freq), as.numeric(xtra_dark_choc_words_freq)))
xtra_dark_choc_words_df$V2 <- as.numeric(xtra_dark_choc_words_df$V2)
library(wesanderson)
library(hrbrthemes)
pal <- wes_palette("GrandBudapest1", 100, type = "continuous")
ggplot(dark_chocolate, aes(x = country_ratings, y = continent, fill = ..x..)) +
geom_density_ridges_gradient(scale = 1, rel_min_height = 0.01) +
scale_fill_gradientn(colours = pal, guide = guide_colourbar(), name = "Rating Scale") +
labs(title = "Dark Chocolate Review Ratings by Continent (2006-2021)") +
theme_ridges() +
theme(plot.title = element_text(face = "italic", hjust = 0.5),
legend.position = "bottom",
legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
guides(fill = guide_colourbar(label.position = "bottom", barwidth = 25, barheight = 0.5))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(tidytuesdayR)
tuesdata <- tidytuesdayR::tt_load('2022-01-18')
chocolate <- tuesdata$chocolate
summary(chocolate)
head(chocolate)
library(countrycode)
chocolate$cocoa_percent <- as.numeric(str_extract(chocolate$cocoa_percent, "\\d+"))/100
dark_chocolate <- chocolate %>%
filter(cocoa_percent <= 0.8) %>%
filter(country_of_bean_origin != "Blend") %>%
group_by(review_date, country_of_bean_origin) %>%
summarize(country_ratings = mean(rating))
extra_dark_chocolate <- chocolate %>%
filter(cocoa_percent > 0.8) %>%
filter(country_of_bean_origin != "Blend") %>%
group_by(review_date, country_of_bean_origin) %>%
summarize(country_ratings = mean(rating))
dark_chocolate$continent <- countrycode(sourcevar = dark_chocolate$country_of_bean_origin,
origin = "country.name",
destination = "continent")
extra_dark_chocolate$continent <- countrycode(sourcevar = extra_dark_chocolate$country_of_bean_origin,
origin = "country.name",
destination = "continent")
dark_chocolate <- na.omit(dark_chocolate)
extra_dark_chocolate <- na.omit(extra_dark_chocolate)
extra_dark_chocolate <- extra_dark_chocolate %>%
filter(continent != "Asia")
head(dark_chocolate)
head(extra_dark_chocolate)
library(tokenizers)
dark_choc <- chocolate %>%
filter(cocoa_percent <= 0.8)
dark_choc_words <- strsplit(toString(dark_choc$most_memorable_characteristics),",")
dark_choc_words_freq <- table(unlist(dark_choc_words))
dark_choc_words_df <- as.data.frame(cbind(names(dark_choc_words_freq), as.numeric(dark_choc_words_freq)))
dark_choc_words_df$V2 <- as.numeric(dark_choc_words_df$V2)
xtra_dark_choc <- chocolate %>%
filter(cocoa_percent > 0.8)
xtra_dark_choc_words <- strsplit(toString(xtra_dark_choc$most_memorable_characteristics),",")
xtra_dark_choc_words_freq <- table(unlist(xtra_dark_choc_words))
xtra_dark_choc_words_df <- as.data.frame(cbind(names(xtra_dark_choc_words_freq), as.numeric(xtra_dark_choc_words_freq)))
xtra_dark_choc_words_df$V2 <- as.numeric(xtra_dark_choc_words_df$V2)
library(ggridges)
library(wesanderson)
library(hrbrthemes)
pal <- wes_palette("GrandBudapest1", 100, type = "continuous")
ggplot(dark_chocolate, aes(x = country_ratings, y = continent, fill = ..x..)) +
geom_density_ridges_gradient(scale = 1, rel_min_height = 0.01) +
scale_fill_gradientn(colours = pal, guide = guide_colourbar(), name = "Rating Scale") +
labs(title = "Dark Chocolate Review Ratings by Continent (2006-2021)") +
theme_ridges() +
theme(plot.title = element_text(face = "italic", hjust = 0.5),
legend.position = "bottom",
legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
guides(fill = guide_colourbar(label.position = "bottom", barwidth = 25, barheight = 0.5))
ggsave("ridgeplot_1.png")
ggplot(extra_dark_chocolate, aes(x = country_ratings, y = continent, fill = ..x..)) +
geom_density_ridges_gradient(scale = 0.8, rel_min_height = 0.01) +
scale_fill_gradientn(colours = pal, guide = guide_colourbar(), name = "Rating Scale") +
labs(title = "Extra Dark Chocolate Review Ratings by Continent (2006-2021)") +
theme_ridges() +
theme(plot.title = element_text(face = "italic", hjust = 0.5),
legend.position = "bottom",
legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
guides(fill = guide_colourbar(label.position = "bottom", barwidth = 25, barheight = 0.5))
ggsave("ridgeplot_2.png")
library(htmlwidgets)
library(webshot)
webshot::install_phantomjs()
library(webshot)
webshot::install_phantomjs()
library(wordcloud2)
wc1 <- wordcloud2(data = dark_choc_words_df, size = 1, color= "random-dark")
wc1
library(htmlwidgets)
saveWidget(wc1,"tmp.html", selfcontained = F)
webshot("tmp.html","test-cloud.pdf", delay = 5, vwidth = 480, vheight = 480)
library(wordcloud2)
wc2 <- wordcloud2(data = xtra_dark_choc_words_df, size = 1, color= "random-dark")
wc2
saveWidget(wc2,"tmp.html", selfcontained = F)
webshot("tmp.html","test-cloud.pdf", delay = 5, vwidth = 480, vheight = 480)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(tidytuesdayR)
tuesdata <- tidytuesdayR::tt_load('2022-01-18')
chocolate <- tuesdata$chocolate
summary(chocolate)
head(chocolate)
library(countrycode)
chocolate$cocoa_percent <- as.numeric(str_extract(chocolate$cocoa_percent, "\\d+"))/100
dark_chocolate <- chocolate %>%
filter(cocoa_percent <= 0.8) %>%
filter(country_of_bean_origin != "Blend") %>%
group_by(review_date, country_of_bean_origin) %>%
summarize(country_ratings = mean(rating))
extra_dark_chocolate <- chocolate %>%
filter(cocoa_percent > 0.8) %>%
filter(country_of_bean_origin != "Blend") %>%
group_by(review_date, country_of_bean_origin) %>%
summarize(country_ratings = mean(rating))
dark_chocolate$continent <- countrycode(sourcevar = dark_chocolate$country_of_bean_origin,
origin = "country.name",
destination = "continent")
extra_dark_chocolate$continent <- countrycode(sourcevar = extra_dark_chocolate$country_of_bean_origin,
origin = "country.name",
destination = "continent")
dark_chocolate <- na.omit(dark_chocolate)
extra_dark_chocolate <- na.omit(extra_dark_chocolate)
extra_dark_chocolate <- extra_dark_chocolate %>%
filter(continent != "Asia")
head(dark_chocolate)
head(extra_dark_chocolate)
library(tokenizers)
dark_choc <- chocolate %>%
filter(cocoa_percent <= 0.8)
dark_choc_words <- strsplit(toString(dark_choc$most_memorable_characteristics),",")
dark_choc_words_freq <- table(unlist(dark_choc_words))
dark_choc_words_df <- as.data.frame(cbind(names(dark_choc_words_freq), as.numeric(dark_choc_words_freq)))
dark_choc_words_df$V2 <- as.numeric(dark_choc_words_df$V2)
xtra_dark_choc <- chocolate %>%
filter(cocoa_percent > 0.8)
xtra_dark_choc_words <- strsplit(toString(xtra_dark_choc$most_memorable_characteristics),",")
xtra_dark_choc_words_freq <- table(unlist(xtra_dark_choc_words))
xtra_dark_choc_words_df <- as.data.frame(cbind(names(xtra_dark_choc_words_freq), as.numeric(xtra_dark_choc_words_freq)))
xtra_dark_choc_words_df$V2 <- as.numeric(xtra_dark_choc_words_df$V2)
library(ggridges)
library(wesanderson)
library(hrbrthemes)
pal <- wes_palette("GrandBudapest1", 100, type = "continuous")
ggplot(dark_chocolate, aes(x = country_ratings, y = continent, fill = ..x..)) +
geom_density_ridges_gradient(scale = 1, rel_min_height = 0.01) +
scale_fill_gradientn(colours = pal, guide = guide_colourbar(), name = "Rating Scale") +
labs(title = "Dark Chocolate Review Ratings by Continent (2006-2021)") +
theme_ridges() +
theme(plot.title = element_text(face = "italic", hjust = 0.5),
legend.position = "bottom",
legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
guides(fill = guide_colourbar(label.position = "bottom", barwidth = 25, barheight = 0.5))
ggsave("ridgeplot_1.png")
ggplot(extra_dark_chocolate, aes(x = country_ratings, y = continent, fill = ..x..)) +
geom_density_ridges_gradient(scale = 0.8, rel_min_height = 0.01) +
scale_fill_gradientn(colours = pal, guide = guide_colourbar(), name = "Rating Scale") +
labs(title = "Extra Dark Chocolate Review Ratings by Continent (2006-2021)") +
theme_ridges() +
theme(plot.title = element_text(face = "italic", hjust = 0.5),
legend.position = "bottom",
legend.title = element_text(size = 8),
legend.text = element_text(size = 7),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
guides(fill = guide_colourbar(label.position = "bottom", barwidth = 25, barheight = 0.5))
ggsave("ridgeplot_2.png")
library(webshot)
webshot::install_phantomjs()
library(wordcloud2)
wc1 <- wordcloud2(data = dark_choc_words_df, size = 1, color= "random-dark")
wc1
wc2 <- wordcloud2(data = xtra_dark_choc_words_df, size = 1, color= "random-dark")
wc2
library(htmlwidgets)
saveWidget(wc1,"tmp.html", selfcontained = F)
webshot("tmp.html","test-cloud.pdf", delay = 5, vwidth = 480, vheight = 480)
saveWidget(wc2,"tmp.html", selfcontained = F)
webshot("tmp.html","test-cloud.pdf", delay = 5, vwidth = 480, vheight = 480)
library(webshot)
webshot::install_phantomjs()
library(wordcloud2)
wc1 <- wordcloud2(data = dark_choc_words_df, size = 1, color= "random-dark")
wc1
wc2 <- wordcloud2(data = xtra_dark_choc_words_df, size = 1, color= "random-dark")
wc2
library(htmlwidgets)
saveWidget(wc1,"dark-chocolate-cloud.html", selfcontained = F)
webshot("dark-chocolate-cloud.html","dark-chocolate-cloud.png", delay = 5, vwidth = 480, vheight = 480)
saveWidget(wc2,"extra-dark-chocolate-cloud.html", selfcontained = F)
webshot("extra-dark-chocolate-cloud.html","extra-dark-chocolate-cloud.png", delay = 5, vwidth = 480, vheight = 480)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(tidytuesdayR)
tuesdata <- tidytuesdayR::tt_load('2022-01-25')
ratings <- tuesdata$ratings
details <- tuesdata$details
head(ratings)
head(details)
joined_df <- left_join(ratings, details, by = "id")
century_19 <- joined_df %>%
filter(year >= 1800) %>%
filter(year < 1900) %>%
arrange(desc(average))
century_20 <- joined_df %>%
filter(year >= 1900) %>%
filter(year < 2000) %>%
arrange(desc(average))
century_21 <- joined_df %>%
filter(year >= 2000) %>%
filter(year < 2100) %>%
arrange(desc(average))
century_19_top10 <- century_19[0:10, ]
install.packages("waffle", repos = "https://cinc.rud.is")
century_19$boardgamecategory <- as.list(strsplit(century_19$boardgamecategory, ","))
century_19 <- century_19 %>% unnest(boardgamecategory)
century_19$boardgamecategory <- gsub("\\[|\\]", "", century_19$boardgamecategory)
century_19$boardgamecategory <- gsub("'", "", century_19$boardgamecategory)
century_19$boardgamecategory <- gsub('"', "", century_19$boardgamecategory)
century_19$boardgamecategory <- trimws(century_19$boardgamecategory)
century_19_bgc <- century_19 %>%
count(boardgamecategory)
century_19_bgc
ggplot(century_19_bgc, aes(fill = boardgamecategory, values = n)) +
geom_waffle()
library(waffle)
century_19$boardgamecategory <- as.list(strsplit(century_19$boardgamecategory, ","))
century_19 <- century_19 %>% unnest(boardgamecategory)
century_19$boardgamecategory <- gsub("\\[|\\]", "", century_19$boardgamecategory)
century_19$boardgamecategory <- gsub("'", "", century_19$boardgamecategory)
century_19$boardgamecategory <- gsub('"', "", century_19$boardgamecategory)
century_19$boardgamecategory <- trimws(century_19$boardgamecategory)
century_19_bgc <- century_19 %>%
count(boardgamecategory)
century_19_bgc
ggplot(century_19_bgc, aes(fill = boardgamecategory, values = n)) +
geom_waffle()
ggplot(century_19_bgc, aes(fill = boardgamecategory, values = n)) +
geom_waffle(n_rows = 20, size = 0.33, colour = "white", flip = TRUE) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
library(hrbrthemes)
ggplot(century_19_bgc, aes(fill = boardgamecategory, values = n)) +
geom_waffle(n_rows = 20, size = 0.33, colour = "white", flip = TRUE) +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
ggplot(century_19_bgc, aes(fill = boardgamecategory, values = n)) +
geom_waffle() +
coord_equal() +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
ggplot(century_19_bgc, aes(fill = boardgamecategory, values = n)) +
geom_waffle() +
coord_equal() +
theme_enhance_waffle()
library(waffle)
library(hrbrthemes)
century_20$boardgamecategory <- as.list(strsplit(century_20$boardgamecategory, ","))
century_20 <- century_20 %>% unnest(boardgamecategory)
century_20$boardgamecategory <- gsub("\\[|\\]", "", century_20$boardgamecategory)
century_20$boardgamecategory <- gsub("'", "", century_20$boardgamecategory)
century_20$boardgamecategory <- gsub('"', "", century_20$boardgamecategory)
century_20$boardgamecategory <- trimws(century_20$boardgamecategory)
century_20_bgc <- century_20 %>%
count(boardgamecategory)
century_20_bgc
ggplot(century_20_bgc, aes(fill = boardgamecategory, values = n)) +
geom_waffle() +
coord_equal() +
theme_enhance_waffle()
table(century_20_bgc$boardgamecategory)
